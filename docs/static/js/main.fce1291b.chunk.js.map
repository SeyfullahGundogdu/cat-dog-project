{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["uniqueId","c","st","Date","prefix","str","t","r","Math","floor","random","String","MyComponent","props","idH1","idButtonOne","idButtonTwo","idDiv","state","count","src","handleClickDog","bind","handleClickCat","fetch","then","response","json","data","setState","message","url","className","style","backgroundImage","this","id","onClick","button","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"8OAKIA,G,MAAY,WACf,IAAIC,EAAI,EACRC,EAAK,IAAIC,KACT,OAAO,SAAUC,GACb,IAEHC,EAFOC,EAAI,IAAIH,KAASD,EACrBK,EAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UAKvB,OAHAN,EAASO,OAAOP,IAAW,GAC3BC,EAAM,IAAMJ,EAAI,IAAMK,EAAI,IAAMC,EAChCN,GAAK,EACEG,EAASC,GAVF,IA+DDO,E,kDA/Cd,WAAYC,GAAQ,IAAD,8BAChB,cAAMA,IAQTC,KAAOd,EAAS,MATG,EAUnBe,YAAcf,EAAS,MAVJ,EAWnBgB,YAAchB,EAAS,MAXJ,EAYnBiB,MAAQjB,EAAS,MAVd,EAAKkB,MAAQ,CACRC,MAAO,EACPC,IAAI,IAEN,EAAKC,eAAe,EAAKA,eAAeC,KAApB,gBACpB,EAAKC,eAAe,EAAKA,eAAeD,KAApB,gBAPP,E,6DAcD,IAAD,OAChBE,MAAM,2CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,UAAS,SAAAX,GAAK,MAAK,CACrCE,IAAKQ,EAAKE,QACVX,MAAOD,EAAMC,MAAQ,W,uCAIL,IAAD,OAChBK,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,UAAS,SAAAX,GAAK,MAAK,CACrCE,IAAKQ,EAAK,GAAGG,IACbZ,MAAOD,EAAMC,MAAQ,W,+BAMtB,OACA,iCACC,qBAAKa,UAAU,UAAUC,MAAO,CAAEC,gBAAgB,OAAD,OAASC,KAAKjB,MAAME,IAApB,MAA6BgB,GAAID,KAAKlB,QACvF,wBAAQe,UAAU,eAAeK,QAASF,KAAKd,eAAgBY,MAAOE,KAAKG,OAAQF,GAAID,KAAKpB,YAA5F,yBAGA,wBAAQiB,UAAU,eAAeK,QAASF,KAAKZ,eAAgBU,MAAOE,KAAKG,OAAQF,GAAID,KAAKnB,YAA5F,gC,GAzCuBuB,IAAMC,WCRjBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fce1291b.chunk.js","sourcesContent":["import React from 'react';\nimport './mysass.scss'\n\n//generate a unique ID each time the page gets refreshed\n//https://dustinpfister.github.io/2018/10/03/lodash_uniqueid/\nlet uniqueId = (function () {\n\tlet c = 0,\n\tst = new Date();\n\treturn function (prefix) {\n    \tvar t = new Date() - st,\n    \tr = Math.floor(Math.random() * 1000),\n\t\tstr;\n\t\tprefix = String(prefix) || '';\n\t\tstr = '-' + c + '-' + t + '-' + r;\n\t\tc += 1;\n\t\treturn prefix + str;\n  \t}\n}\n  \t());\n\nclass MyComponent extends React.Component {\n\tconstructor(props) {\n\t  \tsuper(props);\n\t  \tthis.state = {\n        \tcount: 0,\n        \tsrc:\"\"\n      \t};\n      \tthis.handleClickDog=this.handleClickDog.bind(this);\n      \tthis.handleClickCat=this.handleClickCat.bind(this);\n    }\n\tidH1 = uniqueId('id');\n\tidButtonOne = uniqueId('id');\n\tidButtonTwo = uniqueId('id');\n\tidDiv = uniqueId('id');\n\n\thandleClickDog() {\n\t\tfetch('https://dog.ceo/api/breeds/image/random')\n\t\t.then(response => response.json())\n\t\t.then(data => this.setState(state => ({\n\t\t\tsrc: data.message,\n\t\t\tcount: state.count + 1\n\t\t\t}))\n\t\t);\n\t}\n\thandleClickCat() {\n\t\tfetch('https://api.thecatapi.com/v1/images/search')\n\t\t.then(response => response.json())\n\t\t.then(data => this.setState(state => ({\n\t\t\tsrc: data[0].url,\n\t\t\tcount: state.count + 1\n\t\t\t}))\n\t\t);\n\t}\n\trender() {\n\n\t\treturn (\n\t\t<body>\n\t\t\t<div className=\"div-img\" style={{ backgroundImage: `url(${this.state.src})`}} id={this.idDiv} />\n\t\t\t<button className=\"button-props\" onClick={this.handleClickDog} style={this.button} id={this.idButtonOne}>\n\t\t\tDog Person {/*id={this.idButtonOne}*/}\n\t\t\t</button>\n\t\t\t<button className=\"button-props\" onClick={this.handleClickCat} style={this.button} id={this.idButtonTwo}>\n\t\t\tCat Person {/*id={this.idButtonTwo}*/}\n\t\t\t</button>\n\t\t</body>\n\t\t);\n\t}\n};\nexport default MyComponent;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}